data Either a b where Left a | Right b

pushEither : forall (a : Type, b : Type, n : Nat)
        . (Either a b) [1..n+1] -> Either (a [1..n+1]) (b [1..n+1])
pushEither x =
  case x of
    [Left x] -> Left [x];
    [Right y] -> Right [y]

pullEither : forall (a : Type, b : Type, k : Nat)
        . Either (a [k]) (b [k]) -> (Either a b) [k]
pullEither x =
  case x of
    (Left [y]) -> [Left y];
    (Right [y]) -> [Right y]
