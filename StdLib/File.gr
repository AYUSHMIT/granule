import Maybe


readFile : String -> (Maybe String) <O,R,C>
readFile filename =
  let o <- openHandle filename ReadMode in
  case o of
    None -> pure None;
    Some h ->
      let (h, cs) <- readUntilEnd h;
          _ <- closeHandle h
      in pure (Some cs)

readUntilEnd : Handle R -> (Handle R, String) <R>
readUntilEnd h =
  let (h, mc) <- readChar h in
  case mc of
    Some c ->
      let (h, str) <- readUntilEnd h
      in pure (h, consString c str);
    None -> (h, "")

