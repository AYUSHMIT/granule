data List a = Nil | Cons a (List a)

map : forall {a : Type, b : Type} .
  (a %1..(1 : Ext Nat) -> b) %0..Inf
  -> List a %1..(1 : Ext Nat)
  -> List b
spec
  map % 0..Inf
map x Nil = Nil;
map x (Cons z u) = (Cons (x z)) ((map x) u)