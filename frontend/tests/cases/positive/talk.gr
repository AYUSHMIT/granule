-- gr --no-eval

dub : Int [2] → Int
dub [x] = x + x

foo : Int [2] → Int [4] → Int [2]
foo [x] [y] = [x + y + y]

twice : ∀ {c : Nat} . (Int [c] → Int) [2] → Int [c * 2] → Int
twice [g] [x] = g [x] + g [x]

doTwice : (Int → Int <{Stdout}>) [2] → Int [2] → Int <{Stdout}>
doTwice [f] [x] =
  let a ← f x;
      b ← f x
  in pure (a + b)

echo : () <{Stdout, Stdin}>
echo = let x ← fromStdin in toStdout x

main : Int
main = 42
