language GradedBase

data List a = Cons a (List a) | Nil

data N = S N | Z


drop : forall a .  N %Any -> List (a) %Any -> List a
spec 
    drop Z Nil = Nil; 
    drop (S Z) Nil = Nil;
    drop Z (Cons Z Nil) = Cons Z Nil; 
    drop (S Z) (Cons Z Nil) = Nil;
    drop Z (Cons (S Z) (Cons Z Nil)) = Cons (S Z) (Cons Z Nil); 
    drop (S Z) (Cons (S Z) (Cons Z Nil)) = Cons Z Nil; 
    drop %Any
drop = ?