language GradedBase

data N = S N | Z
data Tree a = Leaf | Node (Tree a) a (Tree a)

add : N %Any -> N %Any -> N
add Z y = y;
add (S z) y = S ((add z) y)

fold : Tree N %Any -> (N %Any -> N %Any -> N) %Any -> N %Any -> N 
fold Leaf f acc = acc;
fold (Node l x r) f acc = fold l f (f x (fold r f acc))

sum : forall a . Tree N %Any -> N
spec 
    sum Leaf = Z;
    sum (Node Leaf (S (S Z)) Leaf) = (S (S Z));
    fold %Any, add %Any
sum = ?