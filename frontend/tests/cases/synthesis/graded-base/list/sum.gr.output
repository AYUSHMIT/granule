language GradedBase 

data N = S N | Z 

data List a = Cons a (List a) | Nil 

fold : List N %0..∞ -> (N % 1..∞ -> N % 1..∞ -> N) %0..∞ -> N %0..∞ -> N 
fold Nil f acc = acc;
fold (Cons x xs) f acc =  fold xs f (f acc x)

add : N %1..∞ -> N %1..∞ -> N
add Z n2 = n2; 
add (S n1) n2 = S (add n1 n2)

sum : List N %0..∞ -> N 
spec 
    sum (Cons (S Z) (Cons (S Z) Nil)) = (S (S Z));
    sum (Cons (S Z) (Cons (S Z) (Cons (S Z) Nil))) = (S (S (S Z)))      !Cartesian;
    fold %0..∞, add %0..∞
sum x = ((fold x) (\p -> \q -> (add p) q)) ((add Z) Z)