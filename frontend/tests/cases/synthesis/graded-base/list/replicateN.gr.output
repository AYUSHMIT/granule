language GradedBase

data List a =  Cons a (List a) | Nil 
data N = S N | Z

replicateN : forall { a : Type} . N %0..∞ -> a % 0..∞ -> List a
spec
    replicateN (S (S Z)) 2 = (Cons 2 (Cons 2 Nil));
    replicateN % 0..∞
replicateN Z y = Nil;
replicateN (S z) y = (Cons y) ((replicateN z) y)