data Eq : Type -> Type -> Type where
  Refl : forall {a : Type} . Eq a a

sym : âˆ€ {a : Type, b : Type} . Eq a b -> Eq b a
sym Refl = Refl

trans : âˆ€ {a : Type, b : Type, c : Type} . Eq a b -> Eq b c -> Eq a c
trans Refl Refl = Refl