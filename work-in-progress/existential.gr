-- gr --no-eval

data Dyn where
  Dyn : (exists {x : Type} . x) → Dyn

-- Wrapping and rewrapping an existential is okay
idE : Dyn → Dyn
idE (Dyn e) =
  Dyn (unpack <t , x> = e in (pack <t , x> as exists {x : Type} . x))

-- Also works with other kinds
data Dyn2 a where
  Dyn2 : (exists {n : Nat} . a [n]) → Dyn2 a

idF : forall {a : Type} . Dyn2 a → Dyn2 a
idF (Dyn2 e) =
 Dyn2 (unpack <n , x> = e in (pack <n , x> as exists {n : Nat} . a [n]))
