data Vec (n : Nat) (a : Type) where
    Nil : Vec 0 a;
    Cons : forall {n : Nat} . a -> Vec n a -> Vec (n+1) a

data Bool = True | False

isEmpty : ∀ {n : Nat} . Vec n Int → Bool
isEmpty xs =
    case xs of
      Nil        → True;
      (Cons _ _) → False
