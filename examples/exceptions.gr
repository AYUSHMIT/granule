--try 3 as x in 3 catch 4
-- 3
--try 3 as x in x + 3 catch 4
--6
-- try 3 as x in 3
--3
--try 3 as x in x + 3
--6
--try ( (\x -> x + 3) 3) as y in y + 3 
--9
--try 3 as x in (\y -> y + 3) 
-- (\y -> y + 3)
--try 3 as x in (\x -> x + 3) 
--6
--try word as x in x + 3 catch 4
--? idk whether typing is caught here, what is the flow
-- try "nonexistentFile" as x in 
--       let h       <- openHandle ReadMode x;
--       (h, c1)     <- readChar h;
--       ()          <- closeHandle h
        in pure c1 
    catch pure "A"
-- a
-- try "LICENSE" as x in 
--       let h       <- openHandle ReadMode x;
--       (h, c1)     <- readChar h;
--       ()          <- closeHandle h
        in pure c1 
    catch pure "A"
-- C
