import Bool

foo : Chan (Send Bool (Recv Int End)) -> Int
foo c =
  let c      = send c True in
  let (n, c) = recv c      in
  let ()     = close c     in
  n

-- Given a one-shot channel for some sending a value of type 'a'
-- but which is able to be reused 'n' times, and a list of
-- length 'n', then send every element of the list on the
-- channel
sendList : forall (n : Nat=, a : Type) .
   Chan (Send a End) |n| -> List n a -> ()
sendList |c| xs =
  case xs of
    Nil -> ();
    (Cons x xs) ->
       let c' = send c x in
       let () = close c' in
       sendList |c| xs
