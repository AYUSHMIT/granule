import Prelude
import List

filter : (Int → Bool) [0..∞] → (List Int) [1..2] → List Int
filter [_] [Empty] = Empty;
filter [predicate] [Next x xs] = if predicate x
        then Next x (filter [predicate] [xs])
        else filter [predicate] [xs]

main : List Int
main = filter [λ(x : Int) → x < 3] [Next 1 (Next 2 (Next 3 (Next 4 Empty)))]
