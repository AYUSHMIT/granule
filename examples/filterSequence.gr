import Prelude
import List

filter : (Int -> Bool) [âˆž] -> List Int -> List Int
filter [predicate] vec =
    case vec of
      Empty -> Empty;
      (Next x xs) -> if predicate x
        then Next x (filter [predicate] xs)
        else filter [predicate] xs

main : List Int
main = filter [\(x : Int) -> x < 3] (Next 1 (Next 2 (Next 3 (Next 4 Empty))))
