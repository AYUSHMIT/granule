dub : |Int| 2 -> Int
dub |x| = x + x

foo : |Int| 2 -> |Int| 4 -> |Int| 2
foo |x| |y| = |(x + y + y)|

twice : ||Int| c -> Int| 2 -> |Int| (c * 2) -> Int
twice |g| |x| = g |x| + g |x|

doTwice : |(Int -> <Int> [R])| 2 -> |Int| 2 -> <Int> [R, R]
doTwice |f| |x| = let <a : Int> = f x in
                  let <b : Int> = f x in
                  <a + b>

main : Int
main = twice |dub| |42|