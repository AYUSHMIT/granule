-- The following is not typeable

leak : |Int| Hi -> |Int| Lo
leak |x| = |x|

cond : |Bool| Hi -> |Bool| Lo
cond |x| = case x of False -> |False|;
                     True -> |True|

-- notALeak : ||Int| Hi| 0 -> |Int| Lo
-- notALeak |x| = |0|

-- try : forall (l : Level) . |Int| l -> |Int| l
-- try |x| = |(x + x)|


-- try' : forall (l : k) . |Int| (l * (1 + 1)) -> |Int| l
-- try' |x| = |x + x|

-- go : |Int| Hi -> |Int| Hi
-- go |x| = let |z : Int| Hi = try |x| in |(x + z)|

main : |Int| Hi
main = |1|
