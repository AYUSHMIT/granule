-- Hello TLLA
dub : |Int| 2 -> Int
trip |x| = x + x + x

flatten : forall (c : Nat, d : Nat) . ||Int| c| d -> |Int| (c * d)
flatten |xbox| = let |x : Int| Nat = xbox in |x|

twice : forall (n : Nat) . |(|Int| n -> Int)| 2 -> |Int| (2 * n) -> Int
twice |f| |x| = f |x| + f |x|

secret : |Int| Hi
secret = |0309|

hash : forall (l : Level) . |Int| l -> |Int| l

hash : forall (c : Nat) . |Int| (2 * c) -> |Int| c
hash |x| = |(x + x)|

hello : <Int> [R, W]
hello = let <x : Int> = read
        in write x

main : |Int| Hi
main =
   let |pin : Int| Level = hash secret
   in |(twice |dub| |42| + twice |trip| |52| + pin)|