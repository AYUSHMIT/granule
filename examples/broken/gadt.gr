data Lam : Type -> Type where
  Lift : forall a : Type           . a -> Lam a;                     --- lifted value
  Pair : forall a : Type, b : Type . a -> b -> Lam (Prod a b);       --- product
  Lam  : forall a : Type, b : Type . a -> b -> Lam (a -> b);         --- lambda abstraction
  App  : forall a : Type, b : Type . Lam (a -> b) -> Lam a -> Lam b; --- beta reduction
  Fix  : forall a : Type           . Lam (a -> a) -> Lam a           --- fixed point

data Prod a b where
  X : a -> b -> Prod a b
